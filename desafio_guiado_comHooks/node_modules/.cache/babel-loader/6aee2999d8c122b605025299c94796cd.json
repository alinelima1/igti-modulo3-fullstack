{"ast":null,"code":"function leftPad(value, count = 2, char = '0') {\n  const stringValue = value.toString();\n  let newValue = stringValue;\n\n  if (stringValue.length < count) {\n    for (let i = 0; i < count - stringValue.length; i++) {\n      newValue = char + stringValue;\n    }\n  }\n\n  return newValue;\n}\n\nfunction getNewTimestamp() {\n  const now = new Date();\n  let result = '';\n  result += leftPad(now.getDate());\n  result += '/';\n  result += leftPad(now.getMonth() + 1);\n  result += '/';\n  result += leftPad(now.getFullYear());\n  result += ' - ';\n  result += leftPad(now.getHours());\n  result += ':';\n  result += leftPad(now.getMinutes());\n  result += ':';\n  result += leftPad(now.getSeconds());\n  result += '.';\n  result += leftPad(now.getMilliseconds());\n  return result;\n}\n\nexport { getNewTimestamp };","map":{"version":3,"sources":["/home/aline/Documentos/Cursos/IGTI/Bootcamp FullStack - IGTI/MÃ³dulo 3/igti-modulo3-fullstack/desafio_guiado_comHooks/src/helpers/dateTimeHelper.js"],"names":["leftPad","value","count","char","stringValue","toString","newValue","length","i","getNewTimestamp","now","Date","result","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","getMilliseconds"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,KAAK,GAAG,CAAhC,EAAmCC,IAAI,GAAG,GAA1C,EAA+C;AAC7C,QAAMC,WAAW,GAAGH,KAAK,CAACI,QAAN,EAApB;AACA,MAAIC,QAAQ,GAAGF,WAAf;;AAEA,MAAIA,WAAW,CAACG,MAAZ,GAAqBL,KAAzB,EAAgC;AAC9B,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,GAAGE,WAAW,CAACG,MAAxC,EAAgDC,CAAC,EAAjD,EAAqD;AACnDF,MAAAA,QAAQ,GAAGH,IAAI,GAAGC,WAAlB;AACD;AACF;;AACD,SAAOE,QAAP;AACD;;AAED,SAASG,eAAT,GAA2B;AACzB,QAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,MAAM,GAAG,EAAb;AAEAA,EAAAA,MAAM,IAAIZ,OAAO,CAACU,GAAG,CAACG,OAAJ,EAAD,CAAjB;AACAD,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIZ,OAAO,CAACU,GAAG,CAACI,QAAJ,KAAiB,CAAlB,CAAjB;AACAF,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIZ,OAAO,CAACU,GAAG,CAACK,WAAJ,EAAD,CAAjB;AACAH,EAAAA,MAAM,IAAI,KAAV;AACAA,EAAAA,MAAM,IAAIZ,OAAO,CAACU,GAAG,CAACM,QAAJ,EAAD,CAAjB;AACAJ,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIZ,OAAO,CAACU,GAAG,CAACO,UAAJ,EAAD,CAAjB;AACAL,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIZ,OAAO,CAACU,GAAG,CAACQ,UAAJ,EAAD,CAAjB;AACAN,EAAAA,MAAM,IAAI,GAAV;AACAA,EAAAA,MAAM,IAAIZ,OAAO,CAACU,GAAG,CAACS,eAAJ,EAAD,CAAjB;AAEA,SAAOP,MAAP;AACD;;AAED,SAASH,eAAT","sourcesContent":["function leftPad(value, count = 2, char = '0') {\n  const stringValue = value.toString();\n  let newValue = stringValue;\n\n  if (stringValue.length < count) {\n    for (let i = 0; i < count - stringValue.length; i++) {\n      newValue = char + stringValue;\n    }\n  }\n  return newValue;\n}\n\nfunction getNewTimestamp() {\n  const now = new Date();\n  let result = '';\n\n  result += leftPad(now.getDate());\n  result += '/';\n  result += leftPad(now.getMonth() + 1);\n  result += '/';\n  result += leftPad(now.getFullYear());\n  result += ' - ';\n  result += leftPad(now.getHours());\n  result += ':';\n  result += leftPad(now.getMinutes());\n  result += ':';\n  result += leftPad(now.getSeconds());\n  result += '.';\n  result += leftPad(now.getMilliseconds());\n\n  return result;\n}\n\nexport { getNewTimestamp };\n"]},"metadata":{},"sourceType":"module"}